{"version":3,"sources":["logo.svg","components/Menu.js","components/Project/ProjectMenu.js","components/Task/MenuCreateTask.js","components/Task/TaskItem.js","components/Task/TaskList.js","components/Project/ProjectLayout.js","components/SignIn.js","components/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","withRouter","props","React","useContext","ProjectContext","stateProjectList","dispatchProjectList","classes","UserContext","setUser","className","AppBar","position","Toolbar","Typography","variant","Button","color","onClick","newState","axios","defaults","headers","common","localStorage","getItem","post","then","response","data","type","payload","removeItem","is_login","username","history","push","ProjectMenu","name","id","useState","editProjectName","setEditProjectName","projectName","setProjectName","is_editProjectName","handleClickConfirm","event","key","patch","map","project","display","justify","style","TextField","value","error","length","onChange","target","onKeyPress","IconButton","aria-label","edge","e","align","disabled","trim","delete","filter","catch","reason","console","backgroundColor","grey","textField","Menu","id_proj","taskName","setTaskName","deadlinedefault","Date","setDate","getDate","newTask","toISOString","tasks","size","placeholder","width","maxWidth","palette","background","paper","check","green","checked","TaskItem","taskItem","index","task","setTask","edit","setEdit","prevText","setPrevText","prevDate","setPrevDate","is_editTask","editTask","handleClickEdit","expiry_date","text","taskItemRoot","handleClickRemove","labelId","draggableId","provided","ListItem","role","undefined","dense","button","draggableProps","dragHandleProps","innerRef","ListItemIcon","Checkbox","is_done","tabIndex","disableRipple","inputProps","handleToggle","ListItemText","primary","toLocaleDateString","utils","DateFnsUtils","disableToolbar","autoOk","format","margin","date","isNaN","valueOf","label","KeyboardButtonProps","TaskList","droppableId","List","droppableProps","priority","padding","textAlign","secondary","marginTop","ProjectLayout","stateProjectItem","Grid","container","xs","direction","ustify","alignItems","item","Paper","flexDirection","avatar","main","form","submit","email","setEmail","password","setPassword","Container","component","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","res","json","setItem","token","user","onSubminHandler","required","fullWidth","autoComplete","autoFocus","Link","href","Box","mt","reducer","state","action","Error","createContext","App","useReducer","useEffect","get","a","result","fetchData","onDragEnd","destination","project_id","reorderedTaskList","list","startIndex","endIndex","Array","from","err","log","sort","b","reorder","x","source","Provider","exact","path","render","to","pathname","location","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,kC,2PCUrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,OA+CHK,mBA3Cf,SAAcC,GAAQ,IAAD,EAC+BC,IAAMC,WAAWC,IADhD,mBACVC,EADU,KACQC,EADR,KAEXC,EAAUhB,IAFC,EAGOW,IAAMC,WAAWK,IAHxB,mBAGJC,GAHI,WA4BjB,OACI,yBAAKC,UAAWH,EAAQb,MACpB,kBAACiB,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWH,EAAQR,OAA5C,eAGA,kBAACiB,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAvBjB,WACnB,IAGIC,EAAW,GAEfC,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAEhDH,IAAMM,KAAK,wCARM,CACb,KAAQ,gBAQPC,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,MAAK,SAAAE,GACFV,EAAQ,sBAAOd,GAAP,CAAyBwB,IACjCvB,EAAoB,CAACwB,KAAM,iBAAkBC,QAAS,CAAC,MAASZ,UAU5D,eACA,kBAACH,EAAA,EAAD,CAAQC,MAAM,UAAUC,QA/BX,WACzBM,aAAaQ,WAAW,SACxBvB,EAAQ,CAACwB,UAAU,EAAOC,SAAU,KACpCjC,EAAMkC,QAAQC,KAAK,OA4BP,gB,uFC7Cd7C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,OAIH,SAAS0C,EAAT,GAAkC,IAAZC,EAAW,EAAXA,KAAMC,EAAK,EAALA,GAAK,EACIrC,IAAMC,WAAWC,IADrB,mBACrCC,EADqC,KACnBC,EADmB,OAEEJ,IAAMsC,UAAS,GAFjB,mBAErCC,EAFqC,KAEpBC,EAFoB,OAGNxC,IAAMsC,SAASF,GAHT,mBAGrCK,EAHqC,KAGxBC,EAHwB,KAItCrC,EAAUhB,IAGhB,SAASsD,EAAmBJ,GACxB,OAAIA,EACO,QAEA,OAQf,IAAMK,EAAqB,SAAAC,GACL,UAAdA,EAAMC,KAA6B,UAAVD,IACzBL,GAAoBD,GACpBrB,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UACjFL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAC5CH,IAAM6B,MAAN,+CAAoDV,EAApD,KAA2D,CAAC,KAAQI,IAC/DhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAE,GACF,IAAMV,EAAWd,EAAiB6C,KAAI,SAAAC,GAElC,OADIA,EAAQZ,KAAOA,IAAIY,EAAQb,KAAOK,GAC/BQ,KAEX7C,EAAoB,CAACwB,KAAM,uBAAwBC,QAAS,CAAC,MAASZ,UAmBtF,OACI,yBAAKT,UAAWH,EAAQb,MACpB,kBAACiB,EAAA,EAAD,CAAQC,SAAS,SAASwC,QAAQ,OAAOC,QAAQ,iBAC7C,kBAACxC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWH,EAAQR,MAChCuD,MAAO,CAAC,QAAWT,GAAoBJ,KAC9CE,GAEL,kBAACY,EAAA,EAAD,CACI7C,UAAWH,EAAQR,MACnBwC,GAAE,yBAAoBA,GAAMxB,QAAQ,WACpCuC,MAAO,CAAC,QAAWT,EAAmBJ,IACtCe,MAAOb,EACPc,MAA8B,IAAvBd,EAAYe,OACnBC,SAAU,SAAAZ,GAAK,OAAIH,EAAeG,EAAMa,OAAOJ,QAC/CK,WAAY,SAACd,GAAD,OAAWD,EAAmBC,MAE9C,kBAACe,EAAA,EAAD,CAAYpD,UAAWH,EAAQX,WAAYqB,MAAM,UAAU8C,aAAW,OAC1DT,MAAO,CAAC,QAAWT,GAAoBJ,IACvCuB,KAAK,MAAM9C,QAtDvC,SAAyB+C,GACrBvB,GAAoBD,KAsDJ,kBAAC,IAAD,OAEJ,kBAACqB,EAAA,EAAD,CAAYpD,UAAWH,EAAQX,WAAYqB,MAAM,UAAU8C,aAAW,OAC1DT,MAAO,CAAC,QAAWT,EAAmBJ,IACtCuB,KAAK,MAAM9C,QAAS,kBAAM4B,EAAmB,UAAUoB,MAAM,QAC7DC,SAAwC,IAA9BxB,EAAYyB,OAAOV,QACrC,kBAAC,IAAD,OAEJ,kBAACI,EAAA,EAAD,CAAYpD,UAAWH,EAAQX,WAAYqB,MAAM,UAAU8C,aAAW,OAC1DC,KAAK,MAAM9C,QA3Cb,WACtBE,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAChDH,IAAMiD,OAAN,+CAAqD9B,EAArD,MACKZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAE,GACF,IAAMV,EAAWd,EAAiBiE,QAAO,SAAAnB,GAAO,OAAIA,EAAQZ,KAAOA,KACnEjC,EAAoB,CAACwB,KAAM,uBAAwBC,QAAS,CAAC,MAASZ,QACvEoD,OAAM,SAAAC,GACLC,QAAQhB,MAAR,kEAkCuDS,MAAM,SACrD,kBAAC,IAAD,U,8BC7FlB3E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACV+E,gBAAiBC,IAAK,MAE1B/E,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/B8E,UAAW,CACPjF,SAAU,OAIH,SAASkF,EAAT,GAA0B,IAAXC,EAAU,EAAVA,QAAU,EAEY5E,IAAMC,WAAWC,IAF7B,mBAE7BC,EAF6B,KAEXC,EAFW,OAGJJ,IAAMsC,SAAS,IAHX,mBAG7BuC,EAH6B,KAGnBC,EAHmB,KAI9BzE,EAAUhB,IAEVuD,EAAqB,SAAAC,GAEvB,GAAkB,UAAdA,EAAMC,KAA6B,UAAVD,EAAmB,CAE5C,IAAIkC,EAAkB,IAAIC,KAC1BD,EAAgBE,QAAQF,EAAgBG,UAAY,GACpD,IAAIC,EAAU,CACV,KAAQN,EACR,SAAW,EACX,SAAY,EACZ,YAAeE,EAAgBK,cAC/B,WAAcR,GAElB1D,IAAMM,KAAK,qCAAsC2D,GAC5C1D,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,MAAK,SAAAE,GAGF,IAAMV,EAAWd,EAAiB6C,KAAI,SAAAC,GASlC,OARIA,EAAQZ,KAAOuC,IACX3B,EAAQoC,QAGRpC,EAAQoC,MAAQ,IAFhBpC,EAAQoC,MAAMnD,KAAKP,IAMpBsB,KAEX7C,EAAoB,CAACwB,KAAM,cAAeC,QAAS,CAAC,MAASZ,KAC7D6D,EAAY,SAM5B,OACI,yBAAKtE,UAAWH,EAAQb,MACpB,kBAACiB,EAAA,EAAD,CAAQC,SAAS,SAASF,UAAWH,EAAQb,MACzC,kBAACmB,EAAA,EAAD,KACI,kBAAC0C,EAAA,EAAD,CACIhB,GAAG,iBAAiBxB,QAAQ,WAC5ByE,KAAK,QACLhC,MAAOuB,EACPpB,SAAU,SAACZ,GAAD,OAAWiC,EAAYjC,EAAMa,OAAOJ,QAC9CK,WAAY,SAACd,GAAD,OAAWD,EAAmBC,IAC1CrC,UAAWH,EAAQqE,UACnBa,YAAY,6BAEhB,kBAAC3B,EAAA,EAAD,CAAYpD,UAAWH,EAAQX,WAAYqB,MAAM,UAAU8C,aAAW,OAC1DC,KAAK,MAAME,MAAM,QAAQhD,QAAS,kBAAM4B,EAAmB,UAC3DqB,SAAqC,IAA3BY,EAASX,OAAOV,QAClC,kBAAC,IAAD,U,mGCjElBnE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFgG,MAAO,OACPC,SAAU,IACVjB,gBAAiBjF,EAAMmG,QAAQC,WAAWC,OAE9C/F,MAAO,CACHJ,SAAU,GAEdoG,MAAO,CACH9E,MAAO+E,IAAM,KACb,YAAa,CACT/E,MAAO+E,IAAM,MAEjBC,QAAS,QAIF,SAASC,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,MAAQ,EAGxBlG,IAAMsC,SAAS2D,GAHS,mBAGzCE,EAHyC,KAGnCC,EAHmC,OAIepG,IAAMC,WAAWC,IAJhC,mBAIzCC,EAJyC,KAIvBC,EAJuB,KAIFiG,EAJE,KAIIC,EAJJ,OAKhBtG,IAAMsC,SAAS,IALC,mBAKzCiE,EALyC,KAK/BC,EAL+B,OAMhBxG,IAAMsC,SAAS,IANC,mBAMzCmE,EANyC,KAM/BC,EAN+B,KAQ1CrG,EAAUhB,IAGhB,SAASsH,EAAYC,GACjB,OAAIA,EACO,QAEA,OAIf,SAASC,EAAgB9C,GACrBuC,EAAQH,EAAK9D,IACbqE,EAAYP,EAAKW,aACjBN,EAAYL,EAAKY,MAGrB,IAAMnE,EAAqB,SAAAC,GACL,UAAdA,EAAMC,KAA6B,UAAVD,IACzByD,EAAQ,IACwB,IAA5BH,EAAKY,KAAK7C,OAAOV,SACb+C,IAAaJ,EAAKY,MAAQN,IAAaN,EAAKW,cAC5C5F,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UACzFL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBACpCH,IAAM6B,MAAN,4CAAiDoD,EAAK9D,GAAtD,KAA6D8D,GACxD1E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAE,GACF,IAAMV,EAAWd,EAAiB6C,KAAI,SAAAC,GAIlC,OAHAA,EAAQoC,MAAQpC,EAAQoC,MAAMrC,KAAI,SAAAgE,GAC9B,OAAOA,EAAa3E,KAAO8D,EAAK9D,GAAKV,EAAOqF,KAEzC/D,KAEX7C,EAAoB,CAACwB,KAAM,cAAeC,QAAS,CAAC,MAASZ,QAErEyF,EAAY,IACZF,EAAY,KAKhBJ,EAAQ,eAAID,EAAL,CAAW,KAAQI,OAMhCU,EAAoB,WACtB/F,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAChDH,IAAMiD,OAAN,4CAAkDgC,EAAK9D,GAAvD,MACKZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAE,GACF,IAAMV,EAAWd,EAAiB6C,KAAI,SAAAC,GAElC,OADAA,EAAQoC,MAAQpC,EAAQoC,MAAMjB,QAAO,SAAA4C,GAAY,OAAIA,EAAa3E,KAAO8D,EAAK9D,MACvEY,KAEX7C,EAAoB,CAACwB,KAAM,cAAeC,QAAS,CAAC,MAASZ,QAC9DoD,OAAM,SAAAC,GACTC,QAAQhB,MAAR,6DAsBF2D,EAAO,8BAA0Bf,EAAK9D,IAC5C,OACI,kBAAC,IAAD,CAAW8E,YAAahB,EAAK9D,GAAK,GAAIS,IAAKqD,EAAK9D,GAAI6D,MAAOA,IACtD,SAACkB,GAAD,OACG,kBAACC,EAAA,EAAD,eAAUvE,IAAKqD,EAAKzF,SAAU4G,UAAMC,EAAWC,OAAK,EAC1CC,QAAM,GAAKL,EAASM,eAAoBN,EAASO,gBAD3D,CAC4EC,SAAUR,EAASQ,WAE3F,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI/G,MAAM,UACNP,UAAWH,EAAQwF,MACnB/B,KAAK,QACLiC,SAA0B,IAAjBI,EAAK4B,QACdC,UAAW,EACXC,eAAa,EACbC,WAAY,CAAC,kBAAmBhB,GAChCzD,SAAU,SAACZ,IAhCd,SAACA,GAClB3B,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAChDH,IAAM6B,MAAN,4CAAiDoD,EAAK9D,GAAtD,KAA6D,CAAC,QAAWQ,EAAMa,OAAOqC,UACjFtE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAE,GACFyE,EAAQzE,GACR,IAAMV,EAAWd,EAAiB6C,KAAI,SAAAC,GAIlC,OAHAA,EAAQoC,MAAQpC,EAAQoC,MAAMrC,KAAI,SAAAgE,GAC9B,OAAOA,EAAa3E,KAAO8D,EAAK9D,GAAKV,EAAOqF,KAEzC/D,KAEX7C,EAAoB,CAACwB,KAAM,cAAeC,QAAS,CAAC,MAASZ,QAoB7CkH,CAAatF,OAIzB,kBAACuF,EAAA,EAAD,CAAc/F,GAAI6E,EAASmB,QAASlC,EAAKY,KAC3B3D,MAAO,CAAC,QAAWuD,IAAcN,IAASF,EAAK9D,QAC7D,kBAAC+F,EAAA,EAAD,CAAc/F,GAAI6E,EAASmB,QAAS,IAAIrD,KAAKmB,EAAKW,aAAawB,mBAAmB,MACpElF,MAAO,CAAC,QAAWuD,IAAcN,IAASF,EAAK9D,MAAO2B,MAAM,UAC1E,kBAACX,EAAA,EAAD,CACI7C,UAAWH,EAAQR,MACnBwC,GAAE,yBAAoB8D,EAAK9D,IAAMxB,QAAQ,WACzCuC,MAAO,CAAC,QAAWuD,EAAYN,IAASF,EAAK9D,KAC7CiB,MAAO6C,EAAKY,KACZxD,MAA4B,IAArB4C,EAAKY,KAAKvD,OACjBC,SAAU,SAAAZ,GAAK,OAAIuD,EAAQ,eAAID,EAAL,CAAW,KAAQtD,EAAMa,OAAOJ,UAC1DK,WAAY,SAACd,GAAD,OAAWD,EAAmBC,MAE9C,kBAAC,IAAD,CAAyB0F,MAAOC,KAC5B,kBAAC,IAAD,CACIC,gBAAc,EACdC,QAAM,EACN7H,QAAQ,SACR8H,OAAO,aACPC,OAAO,SACPtF,MAAO,IAAI0B,KAAKmB,EAAKW,aACrBrD,SAAU,SAACoF,GAAD,OAAUA,aAAgB7D,OAAS8D,MAAMD,EAAKE,WAAa3C,EAAQ,eACtED,EADqE,CAExE,YAAe0C,EAAKzD,iBACnB,MACL/C,GAAE,6BAAwB8D,EAAK9D,IAC/B2G,MAAM,WACNC,oBAAqB,CACjB,aAAc,eAElB7F,MAAO,CAAC,QAAWuD,EAAYN,IAASF,EAAK9D,QAGrD,kBAACuB,EAAA,EAAD,CAAYpD,UAAWH,EAAQX,WAAYqB,MAAM,UAAU8C,aAAW,OAC1DT,MAAO,CAAC,QAAWuD,IAAcN,IAASF,EAAK9D,MAC/CyB,KAAK,MAAM9C,QAAS6F,GAC5B,kBAAC,IAAD,OAEJ,kBAACjD,EAAA,EAAD,CAAYpD,UAAWH,EAAQX,WAAYqB,MAAM,UAAU8C,aAAW,OAC1DT,MAAO,CAAC,QAAWuD,EAAYN,IAASF,EAAK9D,KAC7CyB,KAAK,MAAM9C,QAAS,kBAAM4B,EAAmB,UAC7CqB,SAAsC,IAA5BkC,EAAKY,KAAK7C,OAAOV,QACnC,kBAAC,IAAD,OAEJ,kBAACI,EAAA,EAAD,CAAYpD,UAAWH,EAAQX,WAAYqB,MAAM,UAAU8C,aAAW,OAC1DC,KAAK,MAAM9C,QAASiG,GAC5B,kBAAC,IAAD,WCzLxB,IAAM5H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFgG,MAAO,OACPhB,gBAAiBjF,EAAMmG,QAAQC,WAAWC,WAInC,SAASsD,GAAT,GAAsC,IAAnB7D,EAAkB,EAAlBA,MAAOhD,EAAW,EAAXA,GAC/BhC,GAD0C,EAAR6F,MACxB7G,MAChB,OAEI,kBAAC,IAAD,CAAW8J,YAAa9G,EAAK,KACxB,SAAC+E,GAAD,OACG,oCACK/B,GACD,kBAAC+D,EAAA,EAAD,eAAMxB,SAAUR,EAASQ,UAAcR,EAASiC,eAAhD,CAAgE7I,UAAWH,EAAQb,OAC9E6F,EAAMrC,KAAI,SAACmD,GAAD,OACP,kBAACH,EAAD,CAAUlD,IAAKqD,EAAK9D,GAAI6D,MAAOC,EAAKmD,SAAUrD,SAAUE,OAE3DiB,EAAS7B,iBChBlC,IAAMlG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACV+F,MAAO,QAEXI,MAAO,CACHJ,MAAO,OACP+D,QAAShK,EAAMK,QAAQ,GACvB4J,UAAW,SACXzI,MAAOxB,EAAMmG,QAAQqB,KAAK0C,UAC1B,gBAAiB,CACbC,UAAW,YAKR,SAASC,KACpB,IAAMtJ,EAAUhB,KADoB,EAETW,IAAMC,WAAWC,IAArCC,EAF6B,oBAGpC,OACI,yBAAKK,UAAWH,EAAQb,MACnBW,EAAiB6C,KAAI,SAAC4G,EAAiB1D,GACpC,OACI,kBAAC2D,EAAA,EAAD,CAAMC,WAAS,EAAClK,QAAS,EAAGkD,IAAK8G,EAAiBvH,IAC9C,kBAACwH,EAAA,EAAD,CAAME,GAAI,GAAIC,UAAU,SAASC,OAAO,SAASC,WAAW,SAASJ,WAAS,EAACK,MAAI,GAC/E,kBAACC,EAAA,EAAD,CAAO5J,UAAWH,EAAQuF,OACtB,kBAACzD,EAAD,CAAaC,KAAMwH,EAAiBxH,KAAMC,GAAIuH,EAAiBvH,KAC/D,kBAAC,EAAD,CAAgBuC,QAASgF,EAAiBvH,KAC1C,kBAAC6G,GAAD,CAAU7D,MAAOuE,EAAiBvE,MAAOhD,GAAIuH,EAAiBvH,GAAI6D,MAAOA,W,gECTnG7G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqG,MAAO,CACH8D,UAAWnK,EAAMK,QAAQ,GACzBsD,QAAS,OACTmH,cAAe,SACfH,WAAY,UAEhBI,OAAQ,CACJ1B,OAAQrJ,EAAMK,QAAQ,GACtB4E,gBAAiBjF,EAAMmG,QAAQ+D,UAAUc,MAE7CC,KAAM,CACFhF,MAAO,OACPkE,UAAWnK,EAAMK,QAAQ,IAE7B6K,OAAQ,CACJ7B,OAAQrJ,EAAMK,QAAQ,EAAG,EAAG,QAgGrBE,gBA5FA,SAAAC,GAAU,IAAD,EAEMC,IAAMsC,UAAS,GAFrB,mBAEboI,EAFa,KAENC,EAFM,OAGY3K,IAAMsC,UAAS,GAH3B,mBAGbsI,EAHa,KAGHC,EAHG,OAII7K,IAAMC,WAAWK,IAJrB,mBAIPC,GAJO,WAKdF,EAAUhB,KAyBhB,OACI,kBAACyL,EAAA,EAAD,CAAWC,UAAU,OAAOtF,SAAS,MACjC,kBAACuF,EAAA,EAAD,MACA,yBAAKxK,UAAWH,EAAQuF,OACpB,kBAACqF,GAAA,EAAD,CAAQzK,UAAWH,EAAQiK,QACvB,kBAAC,KAAD,OAEJ,kBAAC1J,EAAA,EAAD,CAAYmK,UAAU,KAAKlK,QAAQ,MAAnC,WAGA,0BAAML,UAAWH,EAAQmK,KAAMU,YAAU,EAACC,SAAU,SAAApH,GAAC,OAjCzC,SAACA,GACrBA,EAAEqH,iBACF,IAGMzJ,EAAO,CACT,SAAY+I,EACZ,SAAYE,GAEhB1J,IAAMM,KAAK,oCAAqCG,EAPjC,CACX,eAAgB,qBAOfF,MAAK,SAAA4J,GAAG,OAAIA,EAAI1J,QAChBF,MAAK,SAAA6J,GACFhK,aAAaiK,QAAQ,QAASD,EAAKE,OACnCjL,EAAQ,CACJ,SAAY+K,EAAKG,KAAKzJ,SACtB,UAAY,IAGhBjC,EAAMkC,QAAQC,KAAK,QAesCwJ,CAAgB3H,KACrE,kBAACV,EAAA,EAAD,CACIxC,QAAQ,WACR+H,OAAO,SACP+C,UAAQ,EACRC,WAAS,EACTvJ,GAAG,QACH2G,MAAM,gBACN5G,KAAK,QACLyJ,aAAa,QACbC,WAAS,EACTrI,SAAU,SAAAM,GAAC,OAAI4G,EAAS5G,EAAEL,OAAOJ,UAErC,kBAACD,EAAA,EAAD,CACIxC,QAAQ,WACR+H,OAAO,SACP+C,UAAQ,EACRC,WAAS,EACTxJ,KAAK,WACL4G,MAAM,WACNpH,KAAK,WACLS,GAAG,WACHwJ,aAAa,mBACbpI,SAAU,SAAAM,GAAC,OAAI8G,EAAY9G,EAAEL,OAAOJ,UAExC,kBAACxC,EAAA,EAAD,CACIc,KAAK,SACLgK,WAAS,EACT/K,QAAQ,YACRE,MAAM,UACNP,UAAWH,EAAQoK,QALvB,WASA,kBAACZ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMM,MAAI,EAACJ,IAAE,IAEb,kBAACF,EAAA,EAAD,CAAMM,MAAI,GACN,kBAAC4B,GAAA,EAAD,CAAMC,KAAK,UAAUnL,QAAQ,SACxB,sCAMrB,kBAACoL,GAAA,EAAD,CAAKC,GAAI,QCzGf7M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqG,MAAO,CACH8D,UAAWnK,EAAMK,QAAQ,GACzBsD,QAAS,OACTmH,cAAe,SACfH,WAAY,UAEhBI,OAAQ,CACJ1B,OAAQrJ,EAAMK,QAAQ,GACtB4E,gBAAiBjF,EAAMmG,QAAQ+D,UAAUc,MAE7CC,KAAM,CACFhF,MAAO,OACPkE,UAAWnK,EAAMK,QAAQ,IAE7B6K,OAAQ,CACJ7B,OAAQrJ,EAAMK,QAAQ,EAAG,EAAG,QA+FrBE,gBA3FC,SAAAC,GAAU,IAAD,EACKC,IAAMsC,SAAS,IADpB,mBACdoI,EADc,KACPC,EADO,OAEW3K,IAAMsC,SAAS,IAF1B,mBAEdsI,EAFc,KAEJC,EAFI,OAGG7K,IAAMC,WAAWK,IAHpB,mBAGRC,GAHQ,WAIfF,EAAUhB,KA0BhB,OACI,kBAACyL,EAAA,EAAD,CAAWC,UAAU,OAAOtF,SAAS,MACjC,kBAACuF,EAAA,EAAD,MACA,yBAAKxK,UAAWH,EAAQuF,OACpB,kBAACqF,GAAA,EAAD,CAAQzK,UAAWH,EAAQiK,QACvB,kBAAC,KAAD,OAEJ,kBAAC1J,EAAA,EAAD,CAAYmK,UAAU,KAAKlK,QAAQ,MAAnC,WAGA,0BAAML,UAAWH,EAAQmK,KAAMU,YAAU,EAACC,SAAU,SAAApH,GAAC,OAlCzC,SAACA,GACrBA,EAAEqH,iBACF,IAGMzJ,EAAO,CACT,SAAY+I,EACZ,SAAYE,GAGhB1J,IAAMM,KAAK,sCAAuCG,EARnC,CACX,eAAgB,qBAQfF,MAAK,SAAA4J,GAAG,OAAIA,EAAI1J,QAChBF,MAAK,SAAA6J,GACFhK,aAAaiK,QAAQ,QAASD,EAAKE,OACnCjL,EAAQ,CACJ,SAAY+K,EAAKtJ,SACjB,UAAY,IAGhBjC,EAAMkC,QAAQC,KAAK,cAesCwJ,CAAgB3H,KACrE,kBAACV,EAAA,EAAD,CACIxC,QAAQ,WACR+H,OAAO,SACP+C,UAAQ,EACRC,WAAS,EACTvJ,GAAG,WACH2G,MAAM,WACN5G,KAAK,WACL0J,WAAS,EACTrI,SAAU,SAAAM,GAAC,OAAI4G,EAAS5G,EAAEL,OAAOJ,UAErC,kBAACD,EAAA,EAAD,CACIxC,QAAQ,WACR+H,OAAO,SACP+C,UAAQ,EACRC,WAAS,EACTxJ,KAAK,WACL4G,MAAM,WACNpH,KAAK,WACLS,GAAG,WACHwJ,aAAa,mBACbpI,SAAU,SAAAM,GAAC,OAAI8G,EAAY9G,EAAEL,OAAOJ,UAExC,kBAACxC,EAAA,EAAD,CACIc,KAAK,SACLgK,WAAS,EACT/K,QAAQ,YACRE,MAAM,UACNP,UAAWH,EAAQoK,QALvB,WASA,kBAACZ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMM,MAAI,EAACJ,IAAE,IAEb,kBAACF,EAAA,EAAD,CAAMM,MAAI,GACN,kBAAC4B,GAAA,EAAD,CAAMC,KAAK,UAAUnL,QAAQ,SACxB,uCAMrB,kBAACoL,GAAA,EAAD,CAAKC,GAAI,QCvHrB,SAASC,GAAQC,EAAOC,GACpB,OAAQA,EAAOzK,MACX,IAAK,uBAEL,IAAK,uBAEL,IAAK,iBAEL,IAAK,cAEL,IAAM,cAEN,IAAK,cACD,OAAO,YAAIyK,EAAOxK,QAAP,OACf,QACI,MAAM,IAAIyK,OAItB,IAAMpM,GAAiBF,IAAMuM,gBACvBjM,GAAcN,IAAMuM,gBAE1B,SAASC,KAAO,IAAD,EACaxM,IAAMsC,UAAS,GAD5B,mBACJ+D,EADI,KACEC,EADF,OAEatG,IAAMsC,SAAS,CACnC,SAAY,GACZ,WAAYhB,aAAaC,QAAQ,WAJ1B,mBAEJkK,EAFI,KAEElL,EAFF,OAMqCP,IAAMyM,WAAWN,GAAS,IAN/D,mBAMJhM,EANI,KAMcC,EANd,KAQXJ,IAAM0M,WAAU,WAERjB,EAAK1J,WACLb,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAChDH,IAAMyL,IAAI,8CACLlL,MAAK,SAAA4J,GAAG,OAAIA,EAAI1J,QAChBF,MAAK,SAAA6J,GACF/K,EAAQ,CACJ,SAAY+K,EAAKtJ,SACjB,UAAY,IAED,uCAAG,4BAAA4K,EAAA,6DACd1L,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAFlC,SAGOH,IAAM,yCAHb,OAGR2L,EAHQ,OAIdzM,EAAoB,CAACwB,KAAM,uBAAwBC,QAAS,CAAC,MAASgL,EAAOlL,QAJ/D,2CAAH,oDAMfmL,SAGb,IAGH,IA0CMC,EAAY,SAACF,GAEf,GAAKA,EAAOG,YAAZ,CAKA,IAAIC,EAAaJ,EAAOG,YAAY7D,YAG9B+D,EApDM,SAACC,EAAMC,EAAYC,GAG/B,IAAIR,EAASS,MAAMC,KAAKJ,GAoCxB,OAnCIC,EAAaC,IACbR,EAASA,EAAO7J,KAAI,SAAAmD,GAchB,OAbIA,EAAKmD,UAAY+D,GAAYlH,EAAKmD,UAAY8D,IAC9CjH,EAAKmD,SAAWnD,EAAKmD,WAAa8D,EAAaC,EAAWlH,EAAKmD,SAAW,EAC1EpI,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAChDH,IAAM6B,MAAN,4CAAiDoD,EAAK9D,GAAtD,KAA6D8D,GACxD1E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAE,GACF,OAAOA,KACR0C,OAAM,SAAAmJ,GAAG,OACZjJ,QAAQkJ,IAAID,OAIbrH,MAGXiH,EAAaC,IACbR,EAASA,EAAO7J,KAAI,SAAAmD,GAYhB,OAXIA,EAAKmD,UAAY8D,GAAcjH,EAAKmD,UAAY+D,IAChDlH,EAAKmD,SAAWnD,EAAKmD,WAAa8D,EAAajH,EAAKmD,SAAW+D,EAAWlH,EAAKmD,SAAW,EAC1FpI,IAAMC,SAASC,QAAQC,OAAvB,4BAAwDC,aAAaC,QAAQ,UAC7EL,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mBAChDH,IAAM6B,MAAN,4CAAiDoD,EAAK9D,GAAtD,KAA6D8D,GACxD1E,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAAAE,GACF,OAAOA,MAIZwE,MAGf0G,EAASA,EAAOa,MAAK,SAACd,EAAGe,GAAJ,OAAWf,EAAEtD,SAAWqE,EAAErE,SAAY,EAAMqE,EAAErE,SAAWsD,EAAEtD,UAAa,EAAI,KAcvEsE,CAFXzN,EAAiBiE,QAAO,SAAAyJ,GAAC,OAAIA,EAAExL,IAAM4K,KAAa,GAAG5H,MAIhEwH,EAAOiB,OAAO5H,MACd2G,EAAOG,YAAY9G,OAGnBjF,EAAWd,EAAiB6C,KAAI,SAAAC,GAEhC,OADIA,EAAQZ,IAAM4K,IAAYhK,EAAQoC,MAAQ6H,GACvCjK,KAEX7C,EAAoB,CAACwB,KAAM,uBAAwBC,QAAS,CAAC,MAASZ,OAG1E,OACI,yBAAKT,UAAU,OACP,kBAACwK,EAAA,EAAD,MACA,kBAAC,KAAD,KACI,kBAAC1K,GAAYyN,SAAb,CAAsBzK,MAAO,CAACmI,EAAMlL,IACpC,kBAAC,IAAD,CAAOyN,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACnO,GAC3B,OAAI0L,EAAK1J,SAED,kBAAC+I,EAAA,EAAD,CAAWrF,SAAS,MACdtF,GACF,kBAACD,GAAe6N,SAAhB,CACIzK,MAAO,CAACnD,EAAkBC,EAAqBiG,EAAMC,IACrD,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAiByG,UAAWA,GACxB,kBAACpD,GAAD,SASZ,kBAAC,IAAD,CACIwE,GAAI,CACAC,SAAU,UACVhC,MAAO,CAACmB,KAAMxN,EAAMsO,gBAOxC,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,WACd,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WACd,kBAAC,GAAD,UC9JJK,QACW,cAA7BC,OAAOF,SAASG,UAEe,UAA7BD,OAAOF,SAASG,UAEhBD,OAAOF,SAASG,SAASC,MACvB,2DCZNC,IAASR,OACL,kBAAC,GAAD,MACAS,SAASC,eAAe,SD2HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtN,MAAK,SAAAuN,GACJA,EAAaC,gBAEd5K,OAAM,SAAAd,GACLgB,QAAQhB,MAAMA,EAAM2L,c","file":"static/js/main.b0e601fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {ProjectContext, UserContext} from \"../App\";\nimport axios from 'axios'\nimport {withRouter} from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nfunction Menu(props) {\n    const [stateProjectList, dispatchProjectList] = React.useContext(ProjectContext);\n    const classes = useStyles();\n    const [user, setUser] = React.useContext(UserContext)\n\n    const onClickHendlerLogOut = () => {\n        localStorage.removeItem('token');\n        setUser({is_login: false, username: ''});\n        props.history.push(\"/\")\n    };\n\n\n    const onClickHandler = () => {\n        let newProject = {\n            \"name\": \"New Project\",\n        }\n        let newState = [];\n\n        axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n        axios.defaults.headers.common['Content-Type'] = 'application/json';\n\n        axios.post('http://127.0.0.1:8000/api/v1/project/', newProject)\n            .then((response) => response.data)\n            .then(data => {\n                newState = [...stateProjectList, data]\n                dispatchProjectList({type: 'create_project', payload: {'value': newState}});\n            })\n    }\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Ruby garage\n                    </Typography>\n                    <Button color=\"inherit\" onClick={onClickHandler}>Add Project</Button>\n                    <Button color=\"inherit\" onClick={onClickHendlerLogOut}>Logout</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default withRouter(Menu)","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport CheckIcon from '@material-ui/icons/Check';\nimport {ProjectContext} from \"../../App\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ProjectMenu({name, id}) {\n    const [stateProjectList, dispatchProjectList] = React.useContext(ProjectContext);\n    const [editProjectName, setEditProjectName] = React.useState(false);\n    const [projectName, setProjectName] = React.useState(name);\n    const classes = useStyles();\n\n\n    function is_editProjectName(editProjectName) {\n        if (editProjectName) {\n            return 'block'\n        } else {\n            return 'none'\n        }\n    }\n\n    function handleClickEdit(e) {\n        setEditProjectName(!editProjectName);\n    }\n\n    const handleClickConfirm = event => {\n        if (event.key === 'Enter' || event === 'click') {\n            setEditProjectName(!editProjectName);\n            axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n        axios.defaults.headers.common['Content-Type'] = 'application/json';\n            axios.patch(`http://127.0.0.1:8000/api/v1/project/${id}/`, {\"name\": projectName})\n                .then(response => response.data)\n                .then(data => {\n                    const newState = stateProjectList.map(project => {\n                        if (project.id === id) project.name = projectName\n                        return project\n                    })\n                    dispatchProjectList({type: 'update_project_by_id', payload: {'value': newState}})\n                })\n        }\n    }\n\n    const handleClickRemove = () => {\n        axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n        axios.defaults.headers.common['Content-Type'] = 'application/json';\n        axios.delete(`http://127.0.0.1:8000/api/v1/project/${id}/`)\n            .then(response => response.data)\n            .then(data => {\n                const newState = stateProjectList.filter(project => project.id !== id)\n                dispatchProjectList({type: 'remove_project_by_id', payload: {'value': newState}})\n            }).catch(reason => {\n                console.error(`handleClickRemove:: Project %{projectName} do not removed.`)\n            })\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" display=\"none\" justify=\"space-between\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}\n                                style={{'display': is_editProjectName(!editProjectName)}}>\n                        {projectName}\n                    </Typography>\n                    <TextField\n                        className={classes.title}\n                        id={`outlined-basic-${id}`} variant=\"outlined\"\n                        style={{'display': is_editProjectName(editProjectName)}}\n                        value={projectName}\n                        error={projectName.length === 0 ? true : false}\n                        onChange={event => setProjectName(event.target.value)}\n                        onKeyPress={(event) => handleClickConfirm(event)}\n                    />\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                style={{'display': is_editProjectName(!editProjectName)}}\n                                edge=\"end\" onClick={handleClickEdit}>\n                        <EditIcon/>\n                    </IconButton>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                style={{'display': is_editProjectName(editProjectName)}}\n                                edge=\"end\" onClick={() => handleClickConfirm('click')} align='right'\n                                disabled={projectName.trim().length === 0}>\n                        <CheckIcon/>\n                    </IconButton>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                edge=\"end\" onClick={handleClickRemove} align='right'>\n                        <DeleteIcon/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {grey} from '@material-ui/core/colors';\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from '@material-ui/icons/Add';\nimport {ProjectContext} from \"../../App\";\nimport axios from 'axios'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: grey[400],\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    textField: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Menu({id_proj}) {\n\n    const [stateProjectList, dispatchProjectList] = React.useContext(ProjectContext);\n    const [taskName, setTaskName] = React.useState('');\n    const classes = useStyles();\n\n    const handleClickConfirm = event => {\n\n        if (event.key === 'Enter' || event === 'click') {\n\n            let deadlinedefault = new Date()\n            deadlinedefault.setDate(deadlinedefault.getDate() + 3)\n            let newTask = {\n                \"text\": taskName,\n                \"is_done\": false,\n                \"priority\": 0,\n                \"expiry_date\": deadlinedefault.toISOString(),\n                \"project_id\": id_proj\n            }\n            axios.post('http://127.0.0.1:8000/api/v1/task/', newTask)\n                .then((response) => response.data)\n                .then(data => {\n\n\n                    const newState = stateProjectList.map(project => {\n                        if (project.id === id_proj) {\n                            if (project.tasks) {\n                                project.tasks.push(data);\n                            } else {\n                                project.tasks = []\n                                project.tasks.push(data);\n                            }\n                        }\n                        return project\n                    })\n                    dispatchProjectList({type: 'create_task', payload: {'value': newState}})\n                    setTaskName(\"\")\n                })\n\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.root}>\n                <Toolbar>\n                    <TextField\n                        id=\"outlined-basic\" variant=\"outlined\"\n                        size=\"small\"\n                        value={taskName}\n                        onChange={(event) => setTaskName(event.target.value)}\n                        onKeyPress={(event) => handleClickConfirm(event)}\n                        className={classes.textField}\n                        placeholder=\"Input Title for new task\"\n                    />\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                edge=\"end\" align='right' onClick={() => handleClickConfirm('click')}\n                                disabled={taskName.trim().length === 0}>\n                        <AddIcon/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport {ProjectContext} from \"../../App\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {green} from '@material-ui/core/colors';\nimport {Draggable} from \"react-beautiful-dnd\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    title: {\n        flexGrow: 1,\n    },\n    check: {\n        color: green[400],\n        '&$checked': {\n            color: green[600],\n        },\n        checked: {},\n    }\n}));\n\nexport default function TaskItem({taskItem, index}) {\n\n\n    const [task, setTask] = React.useState(taskItem);\n    const [stateProjectList, dispatchProjectList, edit, setEdit] = React.useContext(ProjectContext);\n    const [prevText, setPrevText] = React.useState('');\n    const [prevDate, setPrevDate] = React.useState('');\n\n    const classes = useStyles();\n\n\n    function is_editTask(editTask) {\n        if (editTask) {\n            return 'block'\n        } else {\n            return 'none'\n        }\n    }\n\n    function handleClickEdit(e) {\n        setEdit(task.id)\n        setPrevDate(task.expiry_date)\n        setPrevText(task.text)\n    }\n\n    const handleClickConfirm = event => {\n        if (event.key === 'Enter' || event === 'click') {\n            setEdit('')\n            if (task.text.trim().length !== 0) {\n                if (prevText !== task.text || prevDate !== task.expiry_date) {\n                    axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n        axios.defaults.headers.common['Content-Type'] = 'application/json';\n                    axios.patch(`http://127.0.0.1:8000/api/v1/task/${task.id}/`, task)\n                        .then(response => response.data)\n                        .then(data => {\n                            const newState = stateProjectList.map(project => {\n                                project.tasks = project.tasks.map(taskItemRoot => {\n                                    return taskItemRoot.id === task.id ? data : taskItemRoot\n                                })\n                                return project\n                            })\n                            dispatchProjectList({type: 'update_task', payload: {'value': newState}})\n                        })\n                    setPrevDate('')\n                    setPrevText('')\n                } else {\n                    setTask({...task, 'text': prevText})\n                }\n            } else {\n                setTask({...task, 'text': prevText})\n            }\n\n        }\n    }\n\n    const handleClickRemove = () => {\n        axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n        axios.defaults.headers.common['Content-Type'] = 'application/json';\n        axios.delete(`http://127.0.0.1:8000/api/v1/task/${task.id}/`)\n            .then(response => response.data)\n            .then(data => {\n                const newState = stateProjectList.map(project => {\n                    project.tasks = project.tasks.filter(taskItemRoot => taskItemRoot.id !== task.id)\n                    return project\n                })\n                dispatchProjectList({type: 'remove_task', payload: {'value': newState}})\n            }).catch(reason => {\n            console.error(`handleClickRemove:: Task %{task.text} do not removed.`)\n        })\n\n\n    }\n\n    const handleToggle = (event) => {\n        axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n        axios.defaults.headers.common['Content-Type'] = 'application/json';\n        axios.patch(`http://127.0.0.1:8000/api/v1/task/${task.id}/`, {\"is_done\": event.target.checked})\n            .then(response => response.data)\n            .then(data => {\n                setTask(data);\n                const newState = stateProjectList.map(project => {\n                    project.tasks = project.tasks.map(taskItemRoot => {\n                        return taskItemRoot.id === task.id ? data : taskItemRoot\n                    })\n                    return project\n                })\n                dispatchProjectList({type: 'update_task', payload: {'value': newState}})\n            })\n    };\n    const labelId = `checkbox-list-label-${task.id}`;\n    return (\n        <Draggable draggableId={task.id + ''} key={task.id} index={index}>\n            {(provided) => (\n                <ListItem key={task.position} role={undefined} dense\n                          button {...provided.draggableProps} {...provided.dragHandleProps} innerRef={provided.innerRef}\n                >\n                    <ListItemIcon>\n                        <Checkbox\n                            color=\"default\"\n                            className={classes.check}\n                            edge=\"start\"\n                            checked={task.is_done === true}\n                            tabIndex={-1}\n                            disableRipple\n                            inputProps={{'aria-labelledby': labelId}}\n                            onChange={(event) => {\n                                handleToggle(event)\n                            }}\n                        />\n                    </ListItemIcon>\n                    <ListItemText id={labelId} primary={task.text}\n                                  style={{'display': is_editTask(!(edit === task.id))}}/>\n                    <ListItemText id={labelId} primary={new Date(task.expiry_date).toLocaleDateString('ru')}\n                                  style={{'display': is_editTask(!(edit === task.id))}} align='right'/>\n                    <TextField\n                        className={classes.title}\n                        id={`outlined-basic-${task.id}`} variant=\"outlined\"\n                        style={{'display': is_editTask(edit === task.id)}}\n                        value={task.text}\n                        error={task.text.length === 0 ? true : false}\n                        onChange={event => setTask({...task, 'text': event.target.value})}\n                        onKeyPress={(event) => handleClickConfirm(event)}\n                    />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            autoOk\n                            variant=\"inline\"\n                            format=\"dd/MM/yyyy\"\n                            margin=\"normal\"\n                            value={new Date(task.expiry_date)}\n                            onChange={(date) => date instanceof Date && !isNaN(date.valueOf()) ? setTask({\n                                ...task,\n                                'expiry_date': date.toISOString()\n                            }) : null}\n                            id={`date-picker-inline-${task.id}`}\n                            label=\"deadline\"\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                            style={{'display': is_editTask(edit === task.id)}}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                style={{'display': is_editTask(!(edit === task.id))}}\n                                edge=\"end\" onClick={handleClickEdit}>\n                        <EditIcon/>\n                    </IconButton>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                style={{'display': is_editTask(edit === task.id)}}\n                                edge=\"end\" onClick={() => handleClickConfirm('click')}\n                                disabled={task.text.trim().length === 0}>\n                        <CheckIcon/>\n                    </IconButton>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n                                edge=\"end\" onClick={handleClickRemove}>\n                        <DeleteIcon/>\n                    </IconButton>\n                </ListItem>\n            )}\n        </Draggable>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport TaskItem from './TaskItem'\nimport {Droppable} from \"react-beautiful-dnd\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function TaskList({tasks, id,index}) {\n    const classes = useStyles();\n    return (\n\n        <Droppable droppableId={id + ''}>\n            {(provided) => (\n                <>\n                    {tasks &&\n                    <List innerRef={provided.innerRef} {...provided.droppableProps} className={classes.root}>\n                        {tasks.map((task) =>\n                            <TaskItem key={task.id} index={task.priority} taskItem={task}></TaskItem>\n                        )}\n                        {provided.placeholder}\n                    </List>\n                    }\n                </>\n            )}\n        </Droppable>\n    );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n//custom components\nimport ProjectMenu from './ProjectMenu'\nimport MenuCreateTask from '../Task/MenuCreateTask'\nimport TaskList from \"../Task/TaskList\";\nimport {ProjectContext} from \"../../App\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        '&:first-child': {\n            marginTop: '2em',\n        }\n    },\n}));\n\nexport default function ProjectLayout() {\n    const classes = useStyles();\n    const [stateProjectList] = React.useContext(ProjectContext);\n    return (\n        <div className={classes.root}>\n            {stateProjectList.map((stateProjectItem,index) => {\n                return (\n                    <Grid container spacing={3} key={stateProjectItem.id}>\n                        <Grid xs={12} direction=\"column\" ustify=\"center\" alignItems=\"center\" container item>\n                            <Paper className={classes.paper}>\n                                <ProjectMenu name={stateProjectItem.name} id={stateProjectItem.id}></ProjectMenu>\n                                <MenuCreateTask id_proj={stateProjectItem.id}></MenuCreateTask>\n                                <TaskList tasks={stateProjectItem.tasks} id={stateProjectItem.id} index={index}></TaskList>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                )\n            })}\n        </div>\n    );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {UserContext} from \"../App\";\nimport axios from 'axios';\nimport {withRouter} from \"react-router\";\n\n// function Copyright() {\n//     return (\n//         <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//             {'Copyright © '}\n//             <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//                 Your Website\n//             </Link>{' '}\n//             {new Date().getFullYear}\n//             {'.'}\n//         </Typography>\n//     );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = props => {\n\n    const [email, setEmail] = React.useState(false);\n    const [password, setPassword] = React.useState(false);\n    const [user, setUser] = React.useContext(UserContext)\n    const classes = useStyles();\n\n    const onSubminHandler = (e) => {\n        e.preventDefault();\n        const config = {\n            'Content-Type': 'application/json'\n        }\n        const data = {\n            'username': email,\n            'password': password\n        }\n        axios.post('http://localhost:8000/token-auth/', data, config)\n            .then(res => res.data)\n            .then(json => {\n                localStorage.setItem('token', json.token);\n                setUser({\n                    'username': json.user.username,\n                    'is_login': true\n                })\n\n                props.history.push(\"/\")\n            });\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={e => onSubminHandler(e)}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/signUp\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                {/*<Copyright/>*/}\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(SignIn)","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {UserContext} from \"../App\";\nimport axios from 'axios';\nimport { withRouter } from \"react-router\";\n\n// function Copyright() {\n//     return (\n//         <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//             {'Copyright © '}\n//             <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//                 Your Website\n//             </Link>{' '}\n//             {new Date().getFullYear()}\n//             {'.'}\n//         </Typography>\n//     );\n// }\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst  SignUp = props => {\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [user, setUser] = React.useContext(UserContext)\n    const classes = useStyles();\n\n    const onSubminHandler = (e) => {\n        e.preventDefault();\n        const config = {\n            'Content-Type': 'application/json'\n        }\n        const data = {\n            'username': email,\n            'password': password\n        }\n\n        axios.post('http://localhost:8000/api/v1/users/', data, config)\n            .then(res => res.data)\n            .then(json => {\n                localStorage.setItem('token', json.token);\n                setUser({\n                    'username': json.username,\n                    'is_login': true\n                })\n\n                props.history.push(\"/signIn\")\n            });\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={e => onSubminHandler(e)}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoFocus\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/signIn\" variant=\"body2\">\n                                {\"Do you have an account? Sign In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                {/*<Copyright/>*/}\n            </Box>\n        </Container>\n    );\n}\n\nexport default withRouter(SignUp)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Menu from './components/Menu';\nimport ProjectLayout from './components/Project/ProjectLayout'\nimport {DragDropContext} from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Route, Redirect} from \"react-router-dom\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\n\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'update_project_by_id':\n            return [...action.payload['value']];\n        case 'remove_project_by_id':\n            return [...action.payload['value']];\n        case 'create_project':\n            return [...action.payload['value']];\n        case 'create_task':\n            return [...action.payload['value']];\n        case  'update_task':\n            return [...action.payload['value']];\n        case 'remove_task':\n            return [...action.payload['value']];\n        default:\n            throw new Error();\n    }\n}\n\nconst ProjectContext = React.createContext(); // [[], () => {}]\nconst UserContext = React.createContext();\n\nfunction App() {\n    const [edit, setEdit] = React.useState(false);\n    const [user, setUser] = React.useState({\n        'username': '',\n        'is_login': localStorage.getItem('token') ? true : false,\n    });\n    const [stateProjectList, dispatchProjectList] = React.useReducer(reducer, []);\n\n    React.useEffect(() => {\n\n        if (user.is_login) {\n            axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n            axios.defaults.headers.common['Content-Type'] = 'application/json';\n            axios.get('http://localhost:8000/api/v1/current_user/')\n                .then(res => res.data)\n                .then(json => {\n                    setUser({\n                        'username': json.username,\n                        'is_login': true\n                    })\n                    const fetchData = async () => {\n                        axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n                        axios.defaults.headers.common['Content-Type'] = 'application/json';\n                        const result = await axios('http://127.0.0.1:8000/api/v1/project/');\n                        dispatchProjectList({type: 'update_project_by_id', payload: {'value': result.data}});\n                    }\n                    fetchData();\n                });\n        }\n    }, []);\n\n\n    const reorder = (list, startIndex, endIndex) => {\n\n\n        let result = Array.from(list);\n        if (startIndex > endIndex) {\n            result = result.map(task => {\n                if (task.priority >= endIndex && task.priority <= startIndex) {\n                    task.priority = task.priority === startIndex ? endIndex : task.priority + 1\n                    axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n                    axios.defaults.headers.common['Content-Type'] = 'application/json';\n                    axios.patch(`http://127.0.0.1:8000/api/v1/task/${task.id}/`, task)\n                        .then(response => response.data)\n                        .then(data => {\n                            return data\n                        }).catch(err =>\n                        console.log(err)\n                    )\n                    //return task\n                }\n                return task\n            })\n        }\n        if (startIndex < endIndex) {\n            result = result.map(task => {\n                if (task.priority >= startIndex && task.priority <= endIndex) {\n                    task.priority = task.priority === startIndex ? task.priority = endIndex : task.priority - 1\n                    axios.defaults.headers.common['Authorization'] = `JWT ${localStorage.getItem('token')}`;\n                    axios.defaults.headers.common['Content-Type'] = 'application/json';\n                    axios.patch(`http://127.0.0.1:8000/api/v1/task/${task.id}/`, task)\n                        .then(response => response.data)\n                        .then(data => {\n                            return data\n                        })\n                    //return task\n                }\n                return task\n            })\n        }\n        result = result.sort((a, b) => (a.priority > b.priority) ? 1 : ((b.priority > a.priority) ? -1 : 0))\n        return result;\n    };\n\n    const onDragEnd = (result) => {\n\n        if (!result.destination) {\n            return;\n        }\n\n        //get project\n        let project_id = result.destination.droppableId\n        let taskList = stateProjectList.filter(x => x.id == project_id )[0].tasks\n\n        const reorderedTaskList = reorder(\n            taskList,\n            result.source.index,\n            result.destination.index\n        );\n\n        let newState = stateProjectList.map(project => {\n            if (project.id == project_id) project.tasks = reorderedTaskList\n            return project\n        })\n        dispatchProjectList({type: 'update_project_by_id', payload: {'value': newState}})\n    }\n\n    return (\n        <div className=\"App\">\n                <CssBaseline/>\n                <Router>\n                    <UserContext.Provider value={[user, setUser]}>\n                    <Route exact path=\"/\" render={(props) => {\n                        if (user.is_login) {\n                            return (\n                                <Container maxWidth=\"sm\">\n                                    {(stateProjectList) &&\n                                    <ProjectContext.Provider\n                                        value={[stateProjectList, dispatchProjectList, edit, setEdit]}>\n                                        <Menu></Menu>\n                                        <DragDropContext onDragEnd={onDragEnd}>\n                                            <ProjectLayout></ProjectLayout>\n                                        </DragDropContext>\n                                    </ProjectContext.Provider>\n\n                                    }\n                                </Container>\n                            )\n                        } else {\n                            return (\n                                <Redirect\n                                    to={{\n                                        pathname: \"/signIn\",\n                                        state: {from: props.location}\n                                    }}\n                                />\n                            )\n                        }\n                    }}>\n                    </Route>\n                    <Route exact path=\"/signIn\">\n                        <SignIn></SignIn>\n                    </Route>\n                    <Route exact path=\"/signUp\">\n                        <SignUp></SignUp>\n                    </Route>\n                        </UserContext.Provider>\n                </Router>\n        </div>\n    );\n}\n\nexport {App, ProjectContext, UserContext};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}